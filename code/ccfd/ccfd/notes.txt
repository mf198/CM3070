V 1. gan and wgan can use cuDF, the others algorithms can't
V 2. grid_search and random_search to fine tune hyperparameters (used optuna)
V 3. split the dataset so that the percentage of frauds is balanced (added stratified k-fold validation)
4. compare cost based methods, describe why they can be valuable for financial institutions (fine tuning the thresholds between fp and fn)
5. plots to show data
6. eliminate the slowest/worst performing algo/ovs methods
7. create a DNN (autoencoder / variable autoencoder)
8. compare results
9. propose architecture (using 2/3 methods togheter and classify a TP only when the majority agrees)

10. explain why you uses StandardScaler instead of PCA for amount (data range very wide respect to other features)
    check pca variance for each feature (maybe scaling is needed)
    since I'm also testing ML algos, scaling is probably the best choice

11. Add tensorboard monitoring to model optimization

12. Check why wgan is so slow even with gpu


New testing functions allows:
Single Model, Single Oversampling, Single Metric
Single Model, Single Oversampling, All Metrics
Single Model, All Oversampling, Single Metric
Single Model, All Oversampling, All Metrics
All Models, Single Oversampling, Single Metric
All Models, All Oversampling, All Metrics

Evaluate the use of a recurrent autoencoder in case of dataset containing date and time values